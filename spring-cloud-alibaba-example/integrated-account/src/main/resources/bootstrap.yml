server:
  port: 8012

spring:
  application:
    name: integrated-account  #微服务的名称
  profiles:
    active: dev

  cloud:
    nacos:
      config:
        server-addr: ${NACOS_SERVER_ADDR}  #配置中心的地址
        namespace: 3e9cf74e-264e-4f39-831a-e8597ce28cfa
        group: integrated-example
        # dataid 为 yml 的文件扩展名配置方式
        # `${spring.application.name}.${file-extension:properties}`
        file-extension: yaml
        #通用配置
        shared-configs[0]:
          data-id: datasource-config.yaml
          group: integrated-example
          refresh: true

      discovery:
        server-addr: ${NACOS_SERVER_ADDR} #注册中心的地址
        namespace: 3e9cf74e-264e-4f39-831a-e8597ce28cfa #环境隔离
        group: integrated-example

    sentinel:
      transport:
        dashboard: localhost:8080 # Sentinel 控制台地址
        port: 8719 # 和控制台进行数据交互的端口
      datasource:
        flow-rules:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR}
            namespace: 3e9cf74e-264e-4f39-831a-e8597ce28cfa
            group-id: SENTINEL_GROUP
            data-id: ${spring.application.name}-flow-rules
            data-type: json
            rule-type: flow


  #profile粒度的配置
  #`${spring.application.name}-${profile}.${file-extension:properties}`


seata:
  application-id: ${spring.application.name}
  tx-service-group: ${spring.application.name}-group
#  service:
#    vgroup-mapping:
#      integrated-account-group: default  # 事务组 ---映射关系---> seata server 在注册中心的集群名称
  # 从nacos 配置中心拉取 seata 客户端配置
  config:
    type: nacos
    nacos:
      namespace: 3e9cf74e-264e-4f39-831a-e8597ce28cfa
      serverAddr: ${NACOS_SERVER_ADDR}
      dataId: "seataServer.properties"
      group: "SEATA_GROUP"

  # seata server 的注册中心配置
  registry:
    type: nacos
    nacos:
      namespace: 3e9cf74e-264e-4f39-831a-e8597ce28cfa
      application: seata-server
      server-addr: ${NACOS_SERVER_ADDR}

# seata 客户端没有使用 nacos 配置中心时使用
# 显式配置 seata server default 集群的地址，以逗号分隔
#    grouplist:
#      default: 192.168.50.171:8091

